<h3>WinEdit</h3>

@page "/Win/Edit/{Id:int}"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ILogger<WinEdit> Logger
@using BlazorIntus2.Shared.DataModel

@answHttp
<EditForm Model=@win OnValidSubmit="SaveWin">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="win.Name" />
        </div>
        <ValidationMessage For="@(() => win.Name)" />
    </div>

    <div class="mb-3">
        <label for="Name" class="form-label">QuantityOfWindows</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="win.QuantityOfWindows" />
        </div>
        <ValidationMessage For="@(() => win.QuantityOfWindows)" />
    </div>    
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
    </div>

</EditForm>

@* //<div>@((MarkupString)htmlData)</div> *@

@code {
    [Parameter]
    public int Id { get; set; }
    Data.Window? win = new();
    private MarkupString answHttp = new("RESULT OPERATION:");

    protected override async Task OnInitializedAsync() 
    {
        try
        {
            win = await Http.GetFromJsonAsync<Data.Window>($"/api/Window/{Id}");
            answHttp = new(win.Name);

        }
        catch (HttpRequestException ex)
        {
            answHttp = new(ex.Message.ToString());
        }
        catch (Exception ex)
        {
            answHttp = new(ex.Message.ToString());
        }
        finally
        {
            Logger.LogInformation(win.Name + win.Id);
        }

    }

    protected async Task SaveWin()
    {
        var result = await Http.PostAsJsonAsync("api/Window", win);
        if (result.StatusCode.ToString() != "OK")
        {
            answHttp = new("<div style=color:RED; border: 1px dashed currentcolor;>RESULT OPERATION:ERROR</div>");
        }
        else
        {
            answHttp = new("<div style=color:blue; border: 1px dashed currentcolor;>RESULT OPERATION:OK</div>");
            win.Name = "";
            win.QuantityOfWindows = 0;
            NavigationManager.NavigateTo("/WinFetch");
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/WinFetch");
    }
}